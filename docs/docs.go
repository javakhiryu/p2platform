// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Javakhir Yu",
            "url": "https://github.com/javakhiryu/p2platform",
            "email": "javakhiryulchibaev@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/sell-request": {
            "post": {
                "description": "Create a new sell request with Telegram ID and username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sell-request"
                ],
                "summary": "Create a new sell request",
                "parameters": [
                    {
                        "description": "Create sell request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createSellRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.sellRequestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "something went wrong"
                }
            }
        },
        "api.createSellRequest": {
            "type": "object",
            "required": [
                "currency_from",
                "currency_to",
                "sell_exchange_rate",
                "sell_money_source",
                "sell_total_amount"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "currency_from": {
                    "type": "string"
                },
                "currency_to": {
                    "type": "string"
                },
                "sell_amount_by_card": {
                    "type": "integer",
                    "minimum": 0
                },
                "sell_amount_by_cash": {
                    "type": "integer",
                    "minimum": 0
                },
                "sell_exchange_rate": {
                    "type": "integer"
                },
                "sell_money_source": {
                    "type": "string"
                },
                "sell_total_amount": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "api.sellRequestResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_from": {
                    "type": "string"
                },
                "currency_to": {
                    "type": "string"
                },
                "is_actual": {
                    "type": "boolean"
                },
                "sell_amount_by_card": {
                    "type": "integer"
                },
                "sell_amount_by_cash": {
                    "type": "integer"
                },
                "sell_by_card": {
                    "type": "boolean"
                },
                "sell_by_cash": {
                    "type": "boolean"
                },
                "sell_exchange_rate": {
                    "type": "integer"
                },
                "sell_money_source": {
                    "type": "string"
                },
                "sell_req_id": {
                    "type": "integer"
                },
                "sell_total_amount": {
                    "type": "integer"
                },
                "tg_username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "P2Platform API",
	Description:      "This is a simple API for a P2P platform.\n\nFeel free to contact me if you have any questions\n\nGitHub Repository:",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
